<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Upsource to Slack</title>
	<style>
		input {
			width: 100%;
		}

		#result {
			border: none;
		}
	</style>
</head>
<body>
<h2>Upsource to Slack</h2>
<div>
	<p>
		<label>
			<span>Slack Webhook</span>
			<input id="slack" oninput="update()"
			       placeholder="https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX">
		</label>
	</p>
	<p>
		<label>
			<span>Channel (optional, #channel or @user)</span>
			<input id="channel" oninput="update()" placeholder="<%- @current?.channel %>">
		</label>
	</p>
	<p>
		<label>
			<span>Upsource Home</span>
			<input id="upsource" oninput="update()"
			       placeholder="<%- @current?.upsource || 'http://your.upsource.server/' %>">
		</label>
	</p>
	<p>
		<label>
			<span>Upsource-to-Slack Server (usually leave it alone)</span>
			<input id="host" oninput="update()">
		</label>
	</p>
	<p>
		<span>Use this as your Upsource project webhook</span>
		<label><input id="result" readonly></label>
		<button onclick="copy()">Copy</button>
	</p>
</div>
<div>
	<p>Loaded Presets</p>
	<ul>
		<% for [key, value] in @presets: %>
		<li>
			<a href="<%- key %>"><%= key %></a>
		</li>
		<% end %>
	</ul>
</div>
<script>
	const slack = document.getElementById('slack');
	const channel = document.getElementById('channel');
	const upsource = document.getElementById('upsource');
	const host = document.getElementById('host');
	const result = document.getElementById('result');
	host.value = host.placeholder = `${location.protocol}//${location.host}${location.pathname}`;
	const query = {};
	location.search.substr(1).split('&').forEach(str => {
		const split = str.split('=');
		query[split[0]] = decodeURIComponent(split[1]);
	});
	if (query.slack) slack.value = query.slack;
	if (query.channel) channel.value = query.channel;
	if (query.upsource) upsource.value = query.upsource;
	if (query.host) host.value = query.host;
	update();

	function update() {
		const query = [];
		tryPush('slack', slack);
		tryPush('channel', channel, s => s.length > 1 && (s[0] === '#' || s[0] === '@'));
		tryPush('upsource', upsource);
		let url = host.value.trim() || host.placeholder;
		if (query.length > 0) url += '?' + query.join('&');
		result.value = url;

		function tryPush(key, element, predicate) {
			const str = element.value.trim();
			if (typeof predicate === 'function' ? predicate(str) : str)
				query.push(`${key}=${encodeURIComponent(str)}`);
		}
	}

	function copy() {
		if (result.value) {
			result.select();
			document.execCommand('copy');
		}
	}
</script>
</body>
</html>